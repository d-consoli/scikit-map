% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.spm.R
\name{train.spm}
\alias{train.spm}
\title{train.spm}
\usage{
train.spm(
  df.tr,
  target.variable,
  parallel = TRUE,
  predict_type = NULL,
  folds = folds,
  method.list = NULL,
  n_evals = n_evals,
  plot.workflow = FALSE,
  var.imp = TRUE,
  meta.learner = NULL,
  crs
)
}
\arguments{
\item{df.tr}{}

\item{target.variable}{}

\item{parallel}{}

\item{predict_type}{}

\item{folds}{}

\item{method.list}{}

\item{n_evals}{}

\item{plot.workflow}{}

\item{var.imp}{}

\item{meta.learner}{}

\item{crs}{}
}
\value{
train.model
}
\description{
This is the abstract base class for training objects like [TaskClassif] and [TaskRegr].
For example, for a classification task columns must be marked as ID, df, target column.
train.spm  it multiple models/learners depending on the
class() of the target.variable and for now only returns a
trained model function so later on we could use it to train a new dataset.
}
\examples{
## Splitting training (tr) and test (ts) sets and defining generic variables
## Meuse Demo
library(sp)
library(mlr3verse)
data(meuse)
df <- meuse
df <- na.omit(df[,])
crs = "+init=epsg:3035"
target.variable = "lead"
## define generic var
smp_size <- floor(0.5 * nrow(df))
set.seed(123)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
df.tr <- df[train_ind, ]
df.ts <- df[-train_ind, ]
folds = 2
xbins. = 50
tr = train.spm(df.tr, target.variable = target.variable, folds = folds ,n_evals = n_evals, plot.workflow = TRUE)
train.model= tr[[1]]

var.imp = tr[[2]]
var.imp

summary = tr[[3]]
summary

predict.variable = predict.spm(df.ts, task = NULL, train.model)
## plot var
colorcut. = c(0,0.01,0.03,0.07,0.15,0.25,0.5,0.75,1)
colramp. = colorRampPalette(c("wheat2","red3"))
accuracy.plot.spm(x = df.ts[,target.variable], y = predict.variable)

}
\author{
\href{https://opengeohub.org/people/mohammadreza-sheykhmousa}{Mohammadreza Sheykhmousa} and  \href{https://opengeohub.org/people/tom-hengl}{Tom Hengl}
}
