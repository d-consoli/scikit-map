% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_spm.R
\name{train_spm}
\alias{train_spm}
\title{Train a spatial prediction model, from a (spatial) matrix, using ensemble machine learning,}
\usage{
train_spm(
  df.tr,
  target.variable,
  parallel = TRUE,
  predict_type = NULL,
  folds = NULL,
  n_evals = NULL,
  method.list = NULL,
  var.imp = NULL,
  super.learner = NULL,
  crs = NULL,
  coordinate_names = c("x", "y"),
  ...
)
}
\arguments{
\item{df.tr}{Observation data frame,}

\item{target.variable}{Target variable or response variable,}

\item{parallel}{Parallel processing mode,}

\item{predict_type}{Prediction type 'prob' or 'response',}

\item{folds}{Sub-item for spcv (see mlr3spatiotempcv),}

\item{n_evals}{Number of evaluation process,}

\item{method.list}{Learning methods (see mlr3learners),}

\item{var.imp}{Variable importance,}

\item{super.learner}{Ensemble stacking model usually \code{regr.ranger} for regression tasks,}

\item{crs}{Coordinate reference system, necessary for spcv (see mlr3spatiotempcv),}

\item{coordinate_names}{Columns names for X and Y coordinates,}

\item{...}{other arguments that can be passed on to \code{TaskSupervised},}
}
\value{
List of objects of class \code{mlr3},
}
\description{
This is a function to train (spatial) dataframe   \href{https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0169748}{using Ensemble Machine Learning} and \href{https://mlr3.mlr-org.com/}{mlr3} ecosystem,
}
\examples{
\dontrun{ 
## Meuse Demo
library(sp)
library(mlr3verse)
library(mlr3spatiotempcv)
library(checkmate)
library(future)
library(progress)
library(scales)
library(eumap)
demo(meuse, echo=FALSE)
df <- as.data.frame(meuse)
df.grid <- as.data.frame(meuse.grid)
df = na.omit(df[,])
df.grid = na.omit(df.grid[,])
smp_size <- floor(0.8 * nrow(df))
set.seed(123)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
df.tr <- df[, c("x","y","dist","ffreq","soil","lead")]
df.ts <- df.grid[, c("x","y","dist","ffreq","soil")]
newdata <-df.ts
tr = eumap::train_spm(df.tr, target.variable = "lead",crs )
train_model= tr[[1]]
#var.imp = tr[[2]]
summary = tr[[3]]
response = tr[[4]]
vlp = tr[[5]]
target = tr[[6]]
predict.variable = eumap::predict_spm(train_model, newdata)
pred.v = predict.variable[[1]]
valu.imp= predict.variable[[2]]
plt = eumap::plot_spm(df, gmode  = "norm" , gtype = "var.imp")
df.ts$leadp = predict.variable
coordinates(df.ts) <- ~x+y
proj4string(df.ts) <- CRS("+init=epsg:28992")
gridded(df.ts) = TRUE
## regression grid 
#make a spatial prediction map 
plot(df.ts[,"leadp"])
points(meuse, pch="+")
}
}
\author{
\href{https://opengeohub.org/people/mohammadreza-sheykhmousa}{Mohammadreza Sheykhmousa} and  \href{https://opengeohub.org/people/tom-hengl}{Tom Hengl}
}
