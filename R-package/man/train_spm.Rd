% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_spm.R
\name{train_spm}
\alias{train_spm}
\title{Train Spatial Learner}
\usage{
train_spm(
  df.tr,
  target.variable,
  parallel = TRUE,
  predict_type = NULL,
  folds = folds,
  method.list = NULL,
  n_evals = n_evals,
  plot.workflow = FALSE,
  var.imp = TRUE,
  meta.learner = NULL,
  crs = NULL,
  coordinate_names = c("x", "y")
)
}
\arguments{
\item{df.tr}{observation data}

\item{target.variable}{response variable}

\item{parallel}{parallel processing mode}

\item{predict_type}{e.g., response and prob}

\item{folds}{sub-item for cv}

\item{method.list}{learning methods}

\item{n_evals}{number of evaluation process}

\item{plot.workflow}{graph work flow}

\item{var.imp}{variable importance}

\item{meta.learner}{super learner (mostly RF)}

\item{crs}{coordinate reference system for spcv}
}
\value{
train.model

summary

var.imp
}
\description{
This is the abstract base class for training objects like [TaskClassif] and [TaskRegr].
For example, for a classification task columns must be marked as ID, df, target column.
train.spm  it multiple models/learners depending on the
class() of the target.variable and for now only returns a
trained model function so later on we could use it to train a new dataset.
}
\examples{
## Meuse Demo
library(sp)
library(mlr3verse)
demo(meuse, echo=FALSE)
pr.vars = c("x","y","dist","elev","soil","lead")
df <- as.data.frame(meuse)
# df <- df[complete.cases(df[,pr.vars]),pr.vars]
df = na.omit(df[,])
summary(is.na(df))
crs = "+init=epsg:3035"
#target.variable = "landuse"
target.variable = "lead"
# define generic var ----
smp_size <- floor(0.5 * nrow(df))
set.seed(123)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
df.tr <- df[train_ind, c("x","y","dist","elev","soil","lead")]
df.ts <- df[-train_ind, c("x","y","dist","elev","soil")]
folds = 2
n_evals = 3
newdata = df.ts
tr = train_spm(df.tr, target.variable = target.variable, folds = folds ,n_evals = n_evals, plot.workflow = TRUE, coords, crs, var.imp)
train.model= tr[[1]]
var.imp = tr[[2]]
var.imp
summary = tr[[3]]
summary

}
\author{
\href{https://opengeohub.org/people/mohammadreza-sheykhmousa}{Mohammadreza Sheykhmousa} and  \href{https://opengeohub.org/people/tom-hengl}{Tom Hengl}
}
