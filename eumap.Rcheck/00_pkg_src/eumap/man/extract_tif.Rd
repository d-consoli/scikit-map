% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_tif.R
\name{extract_tif}
\alias{extract_tif}
\title{Extract points from a GeoTIFF using spatiotemporal overlay}
\usage{
extract_tif(
  tif,
  df,
  date,
  date.tif.begin,
  date.tif.end,
  coords = c("x", "y"),
 
    crs = "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs",
  format.date = "\%Y-\%m-\%d"
)
}
\arguments{
\item{tif}{filename,}

\item{df}{data frame with coordinates and dates,}

\item{date}{date column in \code{df},}

\item{date.tif.begin}{reference begin date for the tif filename,}

\item{date.tif.end}{reference end date for the tif filename,}

\item{coords}{coordinate columns e.g. \code{"x", "y"},}

\item{crs}{projection system for the coordinates,}

\item{format.date}{default formatting date,}
}
\value{
list of data frames with row.ids and results of overlay
}
\description{
Extract points from a GeoTIFF using spatiotemporal overlay
}
\details{
Extends the \code{terra::extract} functionality. 
Works best if the GeoTIFF are Cloud-Optimized and located on SSD or similar.
}
\examples{
\dontrun{
library(terra)
tif.name = "R-sample-tiles/9529/2000/landsat_ard_fall_blue_p50.tif"
strip_dates(tif.name, type="begin")
tif1.lst = list.files("/data/eumap/sample-data/R-sample-tiles/9529", pattern=".tif", full.names=TRUE, recursive=TRUE) 
year.span = c(2000:2020)
df = readOGR("/data/eumap/sample-data/R-sample-tiles/9529_croatia_landcover_samples.gpkg")
df <- as.data.frame(df)
df$Date = format.Date(as.Date(paste(df$survey_date), format="\%Y/\%m/\%d"), "\%Y-\%m-\%d")
df$row.id = 1:nrow(df)
begin.tif1.lst = sapply(tif1.lst, function(i){strip_years(i, type="begin")})
end.tif1.lst = sapply(tif1.lst, function(i){strip_years(i, type="end")})
x = extract_tif(tif=tif1.lst[43], df, date="Date", date.tif.begin=begin.tif1.lst[43], date.tif.end=end.tif1.lst[43], coords=c("coords.x1","coords.x2"))
}
}
